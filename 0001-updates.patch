From d2be2b2bdd36c0537dcc71811405ec295e49e266 Mon Sep 17 00:00:00 2001
From: Jyothish9988 <93032610+Jyothish9988@users.noreply.github.com>
Date: Wed, 3 Jul 2024 18:51:12 +0530
Subject: [PATCH] updates

---
 client3.py     | 122 ++++++++++++++++++++++++-------------------------
 client_test.py |  70 ++++++++++++++--------------
 2 files changed, 96 insertions(+), 96 deletions(-)

diff --git a/client3.py b/client3.py
index 713de65..5f88bb3 100644
--- a/client3.py
+++ b/client3.py
@@ -1,61 +1,61 @@
-# ################################################################################
-# #
-# #  Permission is hereby granted, free of charge, to any person obtaining a
-# #  copy of this software and associated documentation files (the "Software"),
-# #  to deal in the Software without restriction, including without limitation
-# #  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# #  and/or sell copies of the Software, and to permit persons to whom the
-# #  Software is furnished to do so, subject to the following conditions:
-# #
-# #  The above copyright notice and this permission notice shall be included in
-# #  all copies or substantial portions of the Software.
-# #
-# #  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-# #  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# #  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-# #  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# #  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# #  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# #  DEALINGS IN THE SOFTWARE.
-#
-# import json
-# import random
-# import urllib.request
-#
-# # Server API URLs
-# QUERY = "http://localhost:8080/query?id={}"
-#
-# # 500 server request
-# N = 500
-#
-#
-# def getDataPoint(quote):
-#     """ Produce all the needed values to generate a datapoint """
-#     """ ------------- Update this function ------------- """
-#     stock = quote['stock']
-#     bid_price = float(quote['top_bid']['price'])
-#     ask_price = float(quote['top_ask']['price'])
-#     price = (bid_price + ask_price)//2
-#     return stock, bid_price, ask_price, price
-#
-#
-# def getRatio(price_a, price_b):
-#     """ Get ratio of price_a and price_b """
-#     """ ------------- Update this function ------------- """
-#     if price_b == 0:
-#         return
-#     return price_a/price_b
-#
-#
-# # Main
-# if __name__ == "__main__":
-#     # Query the price once every N seconds.
-#     for _ in iter(range(N)):
-#         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-#
-#         """ ----------- Update to get the ratio --------------- """
-#         for quote in quotes:
-#             stock, bid_price, ask_price, price = getDataPoint(quote)
-#             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-#
-#         print("Ratio %s" % getRatio(price['ABC'], price['DEF']))
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price + ask_price)//2
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    if price_b == 0:
+        return
+    return price_a/price_b
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(price['ABC'], price['DEF']))
diff --git a/client_test.py b/client_test.py
index c88256c..a17b819 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,35 +1,35 @@
-# import unittest
-# from client3 import getDataPoint
-#
-# class ClientTest(unittest.TestCase):
-#   def test_getDataPoint_calculatePrice(self):
-#     quotes = [
-#       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-#       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-#     ]
-#     """ ------------ Add the assertion below ------------ """
-#     for i in quotes:
-#       self.assertEqual(
-#         getDataPoint(i),
-#         (i['stock'], i['top_bid']['price'], i['top_ask']['price'], (i['top_bid']['price'] + i['top_ask']['price']) / 2)
-#       )
-#
-#   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-#     quotes = [
-#       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-#       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-#     ]
-#     """ ------------ Add the assertion below ------------ """
-#
-#     for i in quotes:
-#       self.assertEqual(
-#         getDataPoint(i),
-#         (i['stock'], i['top_bid']['price'], i['top_ask']['price'], (i['top_bid']['price'] + i['top_ask']['price']) / 2)
-#       )
-#
-#   """ ------------ Add more unit tests ------------ """
-#
-#
-#
-# if __name__ == '__main__':
-#     unittest.main()
+import unittest
+from client3 import getDataPoint
+
+class ClientTest(unittest.TestCase):
+  def test_getDataPoint_calculatePrice(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for i in quotes:
+      self.assertEqual(
+        getDataPoint(i),
+        (i['stock'], i['top_bid']['price'], i['top_ask']['price'], (i['top_bid']['price'] + i['top_ask']['price']) / 2)
+      )
+
+  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+
+    for i in quotes:
+      self.assertEqual(
+        getDataPoint(i),
+        (i['stock'], i['top_bid']['price'], i['top_ask']['price'], (i['top_bid']['price'] + i['top_ask']['price']) / 2)
+      )
+
+  """ ------------ Add more unit tests ------------ """
+
+
+
+if __name__ == '__main__':
+    unittest.main()
-- 
2.40.1.windows.1

